// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Model;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Model.Acesso", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCadastro");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("UsuarioResponsavel")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuarioResponsavel");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioResponsavel");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("api.Model.AcessosGrupo", b =>
                {
                    b.Property<decimal>("AcessosId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("acessosId");

                    b.Property<decimal>("GruposId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("gruposId");

                    b.Property<DateTime?>("DataLancamento")
                        .HasColumnType("datetime")
                        .HasColumnName("dataLancamento");

                    b.Property<decimal?>("UsuarioResponsavel")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuarioResponsavel");

                    b.HasKey("AcessosId", "GruposId");

                    b.HasIndex("UsuarioResponsavel");

                    b.ToTable("AcessosGrupos");
                });

            modelBuilder.Entity("api.Model.AcessosUsuario", b =>
                {
                    b.Property<decimal>("AcessosId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("acessosId");

                    b.Property<decimal>("UsuariosId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuariosId");

                    b.Property<DateTime?>("DataLancamento")
                        .HasColumnType("datetime")
                        .HasColumnName("dataLancamento");

                    b.Property<decimal?>("UsuarioResponsavel")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuarioResponsavel");

                    b.HasKey("AcessosId", "UsuariosId");

                    b.HasIndex("UsuarioResponsavel");

                    b.HasIndex("UsuariosId");

                    b.ToTable("AcessosUsuarios");
                });

            modelBuilder.Entity("api.Model.Grupo", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCadastro");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("UsuarioResponsavel")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuarioResponsavel");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioResponsavel");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("api.Model.GruposUsuario", b =>
                {
                    b.Property<decimal>("GruposId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("gruposId");

                    b.Property<decimal>("UsuariosId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuariosId");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCadastro");

                    b.Property<decimal?>("UsuarioResponsavel")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("usuarioResponsavel");

                    b.HasKey("GruposId", "UsuariosId");

                    b.HasIndex("UsuarioResponsavel");

                    b.HasIndex("UsuariosId");

                    b.ToTable("GruposUsuarios");
                });

            modelBuilder.Entity("api.Model.Usuario", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("id")
                        .HasComment("Identificação do usuário");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("dataCadastro");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Hash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hash");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Salt")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salt");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("sexo")
                        .IsFixedLength();

                    b.Property<string>("Tratamento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tratamento");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("api.Model.Acesso", b =>
                {
                    b.HasOne("api.Model.Usuario", "UsuarioResponsavelNavigation")
                        .WithMany("Acessos")
                        .HasForeignKey("UsuarioResponsavel")
                        .HasConstraintName("FK_Acessos_Usuarios");

                    b.Navigation("UsuarioResponsavelNavigation");
                });

            modelBuilder.Entity("api.Model.AcessosGrupo", b =>
                {
                    b.HasOne("api.Model.Acesso", "Acessos")
                        .WithMany("AcessosGrupos")
                        .HasForeignKey("AcessosId")
                        .IsRequired()
                        .HasConstraintName("FK_AcessosGrupos_Acessos");

                    b.HasOne("api.Model.Usuario", "UsuarioResponsavelNavigation")
                        .WithMany("AcessosGrupos")
                        .HasForeignKey("UsuarioResponsavel")
                        .HasConstraintName("FK_AcessosGrupos_Usuarios");

                    b.Navigation("Acessos");

                    b.Navigation("UsuarioResponsavelNavigation");
                });

            modelBuilder.Entity("api.Model.AcessosUsuario", b =>
                {
                    b.HasOne("api.Model.Acesso", "Acessos")
                        .WithMany("AcessosUsuarios")
                        .HasForeignKey("AcessosId")
                        .IsRequired()
                        .HasConstraintName("FK_AcessosUsuarios_Acessos");

                    b.HasOne("api.Model.Usuario", "UsuarioResponsavelNavigation")
                        .WithMany("AcessosUsuarioUsuarioResponsavelNavigations")
                        .HasForeignKey("UsuarioResponsavel")
                        .HasConstraintName("FK_AcessosUsuarios_Usuarios1");

                    b.HasOne("api.Model.Usuario", "Usuarios")
                        .WithMany("AcessosUsuarioUsuarios")
                        .HasForeignKey("UsuariosId")
                        .IsRequired()
                        .HasConstraintName("FK_AcessosUsuarios_Usuarios");

                    b.Navigation("Acessos");

                    b.Navigation("UsuarioResponsavelNavigation");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api.Model.Grupo", b =>
                {
                    b.HasOne("api.Model.Usuario", "UsuarioResponsavelNavigation")
                        .WithMany("Grupos")
                        .HasForeignKey("UsuarioResponsavel")
                        .HasConstraintName("FK_Grupos_Usuarios");

                    b.Navigation("UsuarioResponsavelNavigation");
                });

            modelBuilder.Entity("api.Model.GruposUsuario", b =>
                {
                    b.HasOne("api.Model.Grupo", "Grupos")
                        .WithMany("GruposUsuarios")
                        .HasForeignKey("GruposId")
                        .IsRequired()
                        .HasConstraintName("FK_GruposUsuarios_Grupos");

                    b.HasOne("api.Model.Usuario", "UsuarioResponsavelNavigation")
                        .WithMany("GruposUsuarioUsuarioResponsavelNavigations")
                        .HasForeignKey("UsuarioResponsavel")
                        .HasConstraintName("FK_GruposUsuarios_Usuarios1");

                    b.HasOne("api.Model.Usuario", "Usuarios")
                        .WithMany("GruposUsuarioUsuarios")
                        .HasForeignKey("UsuariosId")
                        .IsRequired()
                        .HasConstraintName("FK_GruposUsuarios_Usuarios");

                    b.Navigation("Grupos");

                    b.Navigation("UsuarioResponsavelNavigation");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api.Model.Acesso", b =>
                {
                    b.Navigation("AcessosGrupos");

                    b.Navigation("AcessosUsuarios");
                });

            modelBuilder.Entity("api.Model.Grupo", b =>
                {
                    b.Navigation("GruposUsuarios");
                });

            modelBuilder.Entity("api.Model.Usuario", b =>
                {
                    b.Navigation("Acessos");

                    b.Navigation("AcessosGrupos");

                    b.Navigation("AcessosUsuarioUsuarioResponsavelNavigations");

                    b.Navigation("AcessosUsuarioUsuarios");

                    b.Navigation("Grupos");

                    b.Navigation("GruposUsuarioUsuarioResponsavelNavigations");

                    b.Navigation("GruposUsuarioUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
